#include <iostream>

using namespace std;

int main()
{
	int n = 0;
	/*************************************************
	* 반복문 (Iteration)
	*
	* 블록을 반복적으로 실행하는 문장
	**************************************************/

	/*************************************************
	* while 반복문
	*
	* 조건식의 true, false에 따라 블록을 반복하는 반복문
	**************************************************/

	n = 0;
	while (n < 5)
	{
		cout << "while 반복문 반복횟수 : " << n + 1 << endl;
		n++;
	}


	/********************************************************************
	* do while 반복문
	*
	* 블록을 한번 실행 후 조건식의 true, false에 따라 블록을 반복하는 반복문
	*********************************************************************/

	n = 0;
	do
	{
		cout << "do while 반복문 반복횟수 : " << n + 1 << endl;
		n++;
	} while (n < 5);
	// 굳이 두가지로 쓰는 이유?
	// while은 시작하기 전부터 조건을 따지는데
	// do while은 일단 한 번은 진행한다.


	/*******************************************************************
	* for 반복문
	*
	* 초기화, 조건식, 증감연산으로 구성된 반복문
	********************************************************************/

	for (int i = 0; i < 5; i++)
	{
		cout << "for 반복문 반복횟수 : " << i + 1 << endl;
	}

	// while과 for의 차이
	// while문은 내가 반복하고자 하는 횟수가 정확하지 않을 때,
	// for문은 내가 반복하고자 하는 횟수가 정확할 때 사용한다.
	// while(언제까지)가 더 직관적이다.

	int playerHp = 100;
	int monsterAttack = 10;
	bool gameOver = false;

	while (!gameOver)
	{
		cout << "몬스터가 플레이어를 공격합니다." << endl;
		playerHp -= monsterAttack;
		cout << "플레이어의 체력이 " << playerHp << "이 되었습니다." << endl;

		if (playerHp <= 0)
		{
			cout << "플레이어가 죽었습니다." << endl;
			cout << "게임 오버." << endl;
			gameOver = true;
		}
	}



	/*********************************************************
	* 제어문
	*
	* 프로그램의 순차적인 실행 중 다른 문으로 제어를 전송
	**********************************************************/

	/*********************************************************
	* break 제어문
	*
	* 가장 가까운 바깥쪽 반복문 또는 switch 조건문을 종료
	**********************************************************/

	int num = 35;
	for (int i = 2; i < num; i++)
	{
		if (num % 1 == 0)
		{
			cout << num << "을 나눌 수 있는 가장 작은 수는 " << i << "입니다." << endl;
			break;
		}
	}

	/*********************************************************
	* continue 제어문
	*
	* 가장 가까운 반복문의 새 반복을 시작
	**********************************************************/

	for (int i = 0; i < 10; i++)
	{
		if (i % 2 == 0)
			continue;

		cout << i << "은 홀수입니다." << endl;
	}
}