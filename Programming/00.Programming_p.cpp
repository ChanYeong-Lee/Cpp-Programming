/********************
* 주석 (Comment)
* 소스 코드에 영향 X 
* 설명을 위한 텍스트
*********************/

// <주석 종류>
// //       한줄 주석 : // 이후 텍스트 주석 취급
// /* */    범위 주석 : 시작부터 끝까지 주석
// ///      문서 주석 : 함수나 클래스 앞에 설명문(정보표시기능)

/**********************************************************************
* 전처리기 (Precompiler)
* 소스 코드 중 #으로 시작하는 지시문은 컴파일 이전단계에 처리
* 프로그램의 처리를 지정하는 것이 아닌 컴파일 이전에 소스를 재구성해주는 역할
***********************************************************************/

// <include>
// include 지시문에 포함한 헤더 파일의 내용을 복붙하겠다
// 이미 구현한 기능을 현재 파일에서 필요할 때 사용
//  <> : 시스템 헤더에서 사용 (C++을 설치한 폴더에서 헤더 파일을 찾음)
//  "" : 유저의 헤더에서 사용 (프로젝트 폴더에서 헤더 파일을 찾음)
#include <iostream> // iostream : 입출력 기능이 구현된 파일

// <define>
// 지시문에 포함된 식별자를 뒤의 내용으로 대체하는 매크로
// 반복할 내용을 미리 적용
// 괄호, 세미콜론 사용 주의

#define HELLO std::cout << "Hello World!"; 
#define SIZE 1024

/*********************************************
* 네임스페이스 (Namespace)
*
* C++ 프로그램에서 이름이 중복되는 경우를 방지
* :: 콜론 앞에 이름을 붙여 사용
* Ex) std  : 'standard' MS사에서 만든 표준
**********************************************/
namespace Lee
{
    int value = 25;
}

// <using namespace>
// 이후 문서에서는 해당 namespace를 쓸 필요 없다.
using namespace std;
using namespace Lee;

/// <summary>
/// Main 함수
/// 
/// 프로그램의 시작 지점
/// 모든 C++ 프로그램은 하나의 Main 함수를 포함해야 함
/// </summary>
/// <returns></returns>
int main()
{
   // <표준 입출력>
   // 컴퓨터와 사용자가 소통하기 위한 수단
   // C++에서는 iostream으로 구성
   // cout  : 콘솔 출력 담당
   // cin   : 콘솔 입력 담당
   // 
   // \n    : 줄바꿈(따옴표 안에)
   // endl  : 줄바꿈
   // <<    : 같은 명령 이어서 쓸 때 사용
    std::cout << "Hello World!"
        << std::endl << endl
        << "Size is "
        << SIZE
        << endl << endl
        << "The answer is \"";
    HELLO;
    cout << "\"\n" << endl;
    cout << "Lee\'s Value is \"" << Lee::value << "\"" << endl << "The value is \" " << value << "\"" << endl << endl;

    cout << "직업을 설정해주세요.\n";
    string str;
    cin >> str;
    cout << "당신의 직업은 \"" << str << "\" 입니다" << endl;
}

// break point 
// 함수 순서 왼쪽 빨간색 동그라미 치면 코드 진행 중 일시정지